/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontera;

import DAO.CamaDAO;
import DAO.EgresoPacienteDAO;
import DAO.EquiposUsadosDAO;
import DAO.IngresoPacienteDAO;
import DAO.PacienteDAO_prov;
import Entidad.Camas;
import Entidad.EgresoPaciente;
import Entidad.Paciente;
import javax.swing.JOptionPane;
import Entidad.IngresoPaciente;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Observable;

/**
 *
 * @author tech
 */
public class EgresoPacienteFrontera extends javax.swing.JPanel {
    
    private Paciente paciente = new Paciente();
    private IngresoPaciente ingp = new IngresoPaciente();
    /**
     * Creates new form IngresoPaciente
     */
    public EgresoPacienteFrontera() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        identificacionTF = new javax.swing.JTextField();
        nombre1L = new javax.swing.JLabel();
        observacionTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        aceptarB = new javax.swing.JButton();
        cancelarB = new javax.swing.JButton();
        nombre2L = new javax.swing.JLabel();
        apellido1L = new javax.swing.JLabel();
        apellido2L = new javax.swing.JLabel();
        tipoAtencioL = new javax.swing.JLabel();
        tipoAtencionL = new javax.swing.JLabel();
        fechaL = new javax.swing.JLabel();
        rethusL = new javax.swing.JLabel();
        BuscarB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setMinimumSize(new java.awt.Dimension(755, 585));
        setPreferredSize(new java.awt.Dimension(755, 585));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        identificacionTF.setFont(new java.awt.Font("Century Gothic", 0, 23)); // NOI18N
        identificacionTF.setForeground(new java.awt.Color(16, 65, 56));
        identificacionTF.setBorder(null);
        identificacionTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identificacionTFActionPerformed(evt);
            }
        });
        add(identificacionTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, 140, 20));

        nombre1L.setBackground(new java.awt.Color(0, 0, 0));
        nombre1L.setFont(new java.awt.Font("Century Gothic", 0, 23)); // NOI18N
        nombre1L.setForeground(new java.awt.Color(255, 255, 255));
        nombre1L.setText("Nombre 1");
        add(nombre1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        observacionTF.setBackground(new java.awt.Color(236, 236, 236));
        observacionTF.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        add(observacionTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, 234, 124));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 23)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(16, 65, 56));
        jLabel7.setText("Observaciones");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 170, -1, -1));

        aceptarB.setBackground(new java.awt.Color(204, 204, 204));
        aceptarB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Aceptar.png"))); // NOI18N
        aceptarB.setBorder(null);
        aceptarB.setContentAreaFilled(false);
        aceptarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBActionPerformed(evt);
            }
        });
        add(aceptarB, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 370, 83, -1));

        cancelarB.setBackground(new java.awt.Color(204, 204, 204));
        cancelarB.setForeground(new java.awt.Color(16, 65, 56));
        cancelarB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Cancelar.png"))); // NOI18N
        cancelarB.setBorder(null);
        cancelarB.setContentAreaFilled(false);
        cancelarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBActionPerformed(evt);
            }
        });
        add(cancelarB, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 420, -1, -1));

        nombre2L.setBackground(new java.awt.Color(0, 0, 0));
        nombre2L.setFont(new java.awt.Font("Century Gothic", 0, 23)); // NOI18N
        nombre2L.setForeground(new java.awt.Color(255, 255, 255));
        nombre2L.setText("Nombre 2");
        add(nombre2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        apellido1L.setBackground(new java.awt.Color(0, 0, 0));
        apellido1L.setFont(new java.awt.Font("Century Gothic", 0, 23)); // NOI18N
        apellido1L.setForeground(new java.awt.Color(255, 255, 255));
        apellido1L.setText("Apellido 1");
        add(apellido1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        apellido2L.setBackground(new java.awt.Color(0, 0, 0));
        apellido2L.setFont(new java.awt.Font("Century Gothic", 0, 23)); // NOI18N
        apellido2L.setForeground(new java.awt.Color(255, 255, 255));
        apellido2L.setText("Apellido 2");
        add(apellido2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        tipoAtencioL.setBackground(new java.awt.Color(0, 0, 0));
        tipoAtencioL.setFont(new java.awt.Font("Century Gothic", 0, 23)); // NOI18N
        tipoAtencioL.setForeground(new java.awt.Color(255, 255, 255));
        tipoAtencioL.setText("Tipo de atenci√≥n");
        add(tipoAtencioL, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        tipoAtencionL.setBackground(new java.awt.Color(0, 0, 0));
        tipoAtencionL.setFont(new java.awt.Font("Century Gothic", 0, 23)); // NOI18N
        tipoAtencionL.setForeground(new java.awt.Color(255, 255, 255));
        tipoAtencionL.setText("No. de cama");
        add(tipoAtencionL, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        fechaL.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        fechaL.setForeground(new java.awt.Color(16, 65, 56));
        fechaL.setText("Fecha");
        add(fechaL, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, -1, -1));

        rethusL.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        rethusL.setForeground(new java.awt.Color(16, 65, 56));
        rethusL.setText("ReTHUS");
        add(rethusL, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 440, -1, -1));

        BuscarB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Buscar.png"))); // NOI18N
        BuscarB.setContentAreaFilled(false);
        BuscarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarBActionPerformed(evt);
            }
        });
        add(BuscarB, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 100, 80, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Egreso_Paciente.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void aceptarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBActionPerformed
        /*
        IF(INGRESO != NULL){
            //EGRESO(INGRESO, OBS);
            INGRESO.SETESTADO(FALSE);
            IDAO.ACTUALIZAR(INGRESO);
        
            INGRESO.GETCAMA
            CAMAUX = CDAO.LEER(GETCAMA)
            CAMAUX.SETESTADO(FALSE);
            CDAO.ACTUALIZAR(CAMA, CAMAUX);
        
        
            LISTA<EQUSADOS> = SELECT * EQUIPOS USADOS WHERE INGRESOP_IDINGRESO=INGRESO.GETID():
            FOR(EQ IN EQUSADOS){
                EQUIPO = EDAO.LEERPORID(EQ.GETEQUIPO_IDEQUIPO)
                EQUIPO.SETESTADO(FALSE);
                EDAO.ACTUALIZAR(EQUIPO);
            } ELSE {"no se puede egresar"}
        */
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
                LocalDateTime now = LocalDateTime.now();
                String fecha = now.format(dtf);
        
        if(this.ingp.getIdIngreso()!=0){
            IngresoPaciente ingpaux = new IngresoPaciente();
            IngresoPacienteDAO idao = new IngresoPacienteDAO();
            
            Camas camaaux = new Camas();
            CamaDAO cdao = new CamaDAO();
            
            EgresoPacienteDAO edao = new EgresoPacienteDAO();
            EgresoPaciente egreso = new EgresoPaciente();
            egreso.setFecha(fecha);
            egreso.setObservaciones(observacionTF.getText());
            egreso.setIngresoP(this.ingp);
            edao.crear(egreso);
            
            //Actualizar equipos
            EquiposUsadosDAO equsdao = new EquiposUsadosDAO();
            equsdao.actualizarEquipos(Long.toString(this.ingp.getIdIngreso()));
            
            //actualizo estado ingreso
            ingpaux = this.ingp;
            ingpaux.setEstado(false);
            idao.actualizar(ingp, ingpaux);
            
            //actualizo estado cama
            camaaux = this.ingp.getCama();
            camaaux.setEstado(false);
            cdao.actualizar(this.ingp.getCama(), camaaux);
            
            //MENSAJE EGRESO EXITOSO
            JOptionPane.showMessageDialog(null, "EGRESO CON EXITO", "", JOptionPane.INFORMATION_MESSAGE);
            
            limpiar();
            
        } else {
            System.out.println("NO SE PUEDE EGRESAR, INGRESO NO DISPONIBLE");
        }
    }//GEN-LAST:event_aceptarBActionPerformed

    private void BuscarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarBActionPerformed
        
        //BUSCAR SELECT * FROM INGRESOPACIENTE WHERE PACIENTE_IDPACIENTE = idpaciente AND ESTADO = true;
        //if(ingresopaciente != null){ Paciente P = Pdao.leerporid(P.getIdPaciente()) }
        //else{ sout("PACIENTE SIN INGRESOS ACTIVOS") }
        
        String idpaciente = identificacionTF.getText();
        IngresoPacienteDAO ingpdao = new IngresoPacienteDAO();
        this.ingp = ingpdao.leerPorPaciente(idpaciente);
        if(this.ingp.getIdIngreso() != 0){
            this.paciente = ingp.getPaciente();
            nombre1L.setText("Nombre 1: " + this.paciente.getNombrePaciente1());
            nombre2L.setText("Nombre 2: " + this.paciente.getNombrePaciente2());
            apellido1L.setText("Apellido 1: " + this.paciente.getApellidoPaciente1());
            apellido2L.setText("Apellido 2: " + this.paciente.getApellidoPaciente2());
            tipoAtencioL.setText("Tipo de atencion: " + this.ingp.getCama().getPabellon());
            tipoAtencionL.setText("No. de Cama: " + Integer.toString(this.ingp.getCama().getIdCamas()));
            fechaL.setText("Fecha: " + this.ingp.getFecha());
            rethusL.setText("reTHUS: " + this.ingp.getPersonalm().getReTHUS());
        }
        else {
            System.out.println("PACIENTE SIN INGRESOS ACTIVOS");
        }
        
        
    }//GEN-LAST:event_BuscarBActionPerformed

    private void identificacionTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identificacionTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_identificacionTFActionPerformed

    private void cancelarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBActionPerformed
        limpiar();

// TODO add your handling code here:
    }//GEN-LAST:event_cancelarBActionPerformed
    public void limpiar(){
        nombre1L.setText("Nombre 1");
        nombre2L.setText("Nombre 2");
        apellido1L.setText("Apellido 1");
        apellido2L.setText("Apellido 2");
        observacionTF.setText("");
        identificacionTF.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarB;
    private javax.swing.JButton aceptarB;
    private javax.swing.JLabel apellido1L;
    private javax.swing.JLabel apellido2L;
    private javax.swing.JButton cancelarB;
    private javax.swing.JLabel fechaL;
    private javax.swing.JTextField identificacionTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel nombre1L;
    private javax.swing.JLabel nombre2L;
    private javax.swing.JTextField observacionTF;
    private javax.swing.JLabel rethusL;
    private javax.swing.JLabel tipoAtencioL;
    private javax.swing.JLabel tipoAtencionL;
    // End of variables declaration//GEN-END:variables

}
